# app/services/codial/sync.py
# Module de synchronisation compl√®te Codial
# Ce fichier contient les fonctions de synchronisation compl√®te
# entre Codial, PostgreSQL et BatiSimply

from .chantiers import transfer_chantiers_codial, transfer_chantiers_codial_vers_batisimply
from .heures import transfer_heures_batisimply_to_hfsql
from app.services.connex import recup_batisimply_token

# ============================================================================
# SYNCHRONISATION CODIAL VERS BATISIMPLY
# ============================================================================

def sync_codial_to_batisimply():
    """
    Synchronise les donn√©es de Codial vers BatiSimply via PostgreSQL.
    - √âtape 1 : R√©cup√®re les donn√©es depuis Codial (HFSQL) vers PostgreSQL.
    - √âtape 2 : Transf√®re les chantiers depuis PostgreSQL vers BatiSimply.
    
    Returns:
        tuple: (bool, str)
    """
    try:
        print("\n=== D√âBUT DE LA SYNCHRONISATION CODIAL ‚Üí BATISIMPLY ===")

        # 1. Transfert des donn√©es Codial ‚Üí PostgreSQL
        print("\nüîÑ Transfert des donn√©es Codial vers PostgreSQL...")
        success, message = transfer_chantiers_codial()

        if not success:
            return False, f"‚ùå √âchec du transfert HFSQL ‚Üí PostgreSQL : {message}"
        print(f"‚úÖ {message}")

        # 2. Transfert des chantiers PostgreSQL ‚Üí BatiSimply
        print("\nüîÑ Transfert des chantiers PostgreSQL ‚Üí BatiSimply...")
        success = transfer_chantiers_codial_vers_batisimply()

        if not success:
            return False, "‚ùå √âchec du transfert PostgreSQL ‚Üí BatiSimply"
        print("‚úÖ Transfert vers BatiSimply termin√© avec succ√®s")

        print("\n=== SYNCHRONISATION CODIAL TERMIN√âE AVEC SUCC√àS ===")
        return True, "‚úÖ Synchronisation compl√®te Codial ‚Üí BatiSimply r√©ussie."

    except Exception as e:
        print(f"\n‚ùå Erreur inattendue : {e}")
        return False, f"‚ùå Erreur lors de la synchronisation : {e}"

# ============================================================================
# SYNCHRONISATION BATISIMPLY VERS CODIAL
# ============================================================================

def sync_batisimply_to_codial():
    """
    Synchronise les heures de BatiSimply vers Codial via HFSQL.
    
    Flux : BatiSimply ‚Üí HFSQL (Codial)
    
    Returns:
        tuple: (bool, str)
            - bool: True si la synchronisation a r√©ussi, False sinon
            - str: Message d√©crivant le r√©sultat de l'op√©ration
    """
    try:
        print("\n=== D√âBUT DE LA SYNCHRONISATION BATISIMPLY ‚Üí CODIAL ===")
        
        # R√©cup√©ration du token Batisimply
        token = recup_batisimply_token()
        if not token:
            return False, "‚ùå Impossible de continuer sans token Batisimply"

        print("‚úÖ Token r√©cup√©r√©")

        # Synchronisation BatiSimply ‚Üí HFSQL
        print("\nüîÑ Synchronisation BatiSimply ‚Üí HFSQL")
        success, message = transfer_heures_batisimply_to_hfsql()

        if not success:
            return False, f"‚ùå √âchec du transfert vers HFSQL : {message}"
        print(f"‚úÖ {message}")

        print("\n=== FIN DE LA SYNCHRONISATION BATISIMPLY ‚Üí CODIAL ===")
        return True, "‚úÖ Synchronisation compl√®te BatiSimply ‚Üí Codial r√©ussie."

    except Exception as e:
        print(f"\n‚ùå Erreur lors de la synchronisation : {e}")
        return False, f"‚ùå Erreur lors de la synchronisation : {e}"
